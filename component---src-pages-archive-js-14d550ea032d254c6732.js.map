{"version":3,"sources":["webpack:///./src/styles/components/layout-common.module.css","webpack:///./src/components/header-common.js","webpack:///./src/components/layout-common.js","webpack:///./src/styles/components/search.module.css","webpack:///./src/styles/components/header-common.module.css","webpack:///./src/styles/components/thumbnail-raster.module.css","webpack:///./src/styles/pages/archive.module.css","webpack:///./src/styles/components/thumbnail-vector-archive.module.css","webpack:///./src/components/thumbnail-raster.js","webpack:///./src/components/thumbnail-vector-archive.js","webpack:///./src/components/search.js","webpack:///./src/pages/archive.js"],"names":["module","exports","HeaderCommon","titleSvg","className","styles","headingCommon","src","alt","LayoutCommon","children","mainClassName","globalHeaderCommon","isHidden","ThumbnailRaster","img","thumbnailRaster","fluid","aspectRatio","itemProp","ThumbnailVectorArchive","useState","setIsHidden","thumbnailVectorArchive","classNames","thumbnailVectorArchiveSpace","join","onLoad","Search","query","data","useStaticQuery","queryTag","get","tag","setTag","tagPattern","RegExp","results","allMarkdownRemark","nodes","filter","node","nodeTags","frontmatter","tags","every","nodeTag","test","searchArea","searchAreaLabelTag","searchAreaInput","type","value","onChange","event","target","searchButton","file","publicURL","searchResultList","style","listStyle","padding","map","result","title","fields","slug","imgSrc","header","childImageSharp","thumbnail","key","searchResultItem","itemScope","itemType","to","searchResultImageWrapper","searchResultItemTitle","dateTime","date","replace","searchResultTagList","pageQuery","Archive","location","URLSearchParams","search","url","archivePage"],"mappings":"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","file":"component---src-pages-archive-js-14d550ea032d254c6732.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"globalHeaderCommon\":\"layout-common-module--globalHeaderCommon--2bSRh\"};","import React from \"react\"\n\nimport styles from \"styles/components/header-common.module.css\"\n\nconst HeaderCommon = ({ titleSvg }) => {\n  return (\n    <img className={styles.headingCommon} src={titleSvg} alt=\"heading title\" />\n  )\n}\n\nexport default HeaderCommon\n","import React from \"react\"\nimport HeaderCommon from \"./header-common\"\nimport Nav from \"./nav\"\n\nimport styles from \"styles/components/layout-common.module.css\"\n\nconst LayoutCommon = ({ children, titleSvg, mainClassName }) => {\n  return (\n    <div className=\"global-wrapper\">\n      <header className={styles.globalHeaderCommon}>\n        <HeaderCommon titleSvg={titleSvg} />\n      </header>\n      <Nav isHidden={false} className=\"global-nav-wrapper\" />\n      <main className={mainClassName}>{children}</main>\n    </div>\n  )\n}\n\nexport default LayoutCommon\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchArea\":\"search-module--searchArea--3N03d\",\"searchAreaLabelTag\":\"search-module--searchAreaLabelTag--2InJR\",\"searchAreaInput\":\"search-module--searchAreaInput--2NoM3\",\"searchButton\":\"search-module--searchButton--1FaOq\",\"searchResultList\":\"search-module--searchResultList--mA9SS\",\"searchResultImageWrapper\":\"search-module--searchResultImageWrapper--oiohb\",\"searchResultItem\":\"search-module--searchResultItem--2jGah\",\"searchResultItemTitle\":\"search-module--searchResultItemTitle--1W14M\",\"searchResultTagList\":\"search-module--searchResultTagList--2ijCL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headingCommon\":\"header-common-module--headingCommon--1h1a1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"thumbnailRaster\":\"thumbnail-raster-module--thumbnailRaster--X9WNQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"archivePage\":\"archive-module--archivePage--1hpIm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"thumbnailVectorArchiveSpace\":\"thumbnail-vector-archive-module--thumbnailVectorArchiveSpace--KNlVR\",\"thumbnailVectorArchive\":\"thumbnail-vector-archive-module--thumbnailVectorArchive--22aKC\"};","import React from \"react\"\nimport Img from \"gatsby-image\"\n\nimport styles from \"styles/components/thumbnail-raster.module.css\"\n\nconst ThumbnailRaster = ({ img }) => {\n  return (\n    <Img\n      className={styles.thumbnailRaster}\n      fluid={{ ...img, aspectRatio: 1 }}\n      alt=\"thumbnail\"\n      itemProp=\"image\"\n    />\n  )\n}\n\nexport default ThumbnailRaster\n","import React, { useState } from \"react\"\n\nimport styles from \"styles/components/thumbnail-vector-archive.module.css\"\n\nconst ThumbnailVectorArchive = ({ img }) => {\n  const [isHidden, setIsHidden] = useState(true)\n\n  const className = styles.thumbnailVectorArchive\n  const classNames = isHidden ? [className, \"is-hidden\"] : [className]\n\n  return (\n    <div className={styles.thumbnailVectorArchiveSpace}>\n      <img\n        src={img}\n        className={classNames.join(\" \")}\n        alt=\"thumbnail\"\n        itemProp=\"image\"\n        onLoad={() => setIsHidden(false)}\n      />\n    </div>\n  )\n}\n\nexport default ThumbnailVectorArchive\n","import { graphql, Link, useStaticQuery } from \"gatsby\"\nimport React, { useState } from \"react\"\nimport ThumbnailRaster from \"./thumbnail-raster\"\nimport ThumbnailVectorArchive from \"./thumbnail-vector-archive\"\n\nimport styles from \"styles/components/search.module.css\"\n\n/**\n * @param {object} param0\n * @param {URLSearchParams} param0.query\n */\nconst Search = ({ query }) => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n          nodes {\n            fields {\n              slug\n            }\n            frontmatter {\n              date(formatString: \"YYYY-MM-DD\")\n              title\n              header {\n                childImageSharp {\n                  fluid(\n                    maxWidth: 300\n                    srcSetBreakpoints: [300]\n                    toFormat: WEBP\n                  ) {\n                    ...GatsbyImageSharpFluid_noBase64\n                  }\n                }\n              }\n              tags\n            }\n          }\n        }\n        file(\n          sourceInstanceName: { eq: \"assets\" }\n          relativePath: { eq: \"search.svg\" }\n        ) {\n          publicURL\n        }\n      }\n    `\n  )\n\n  const queryTag = query.get(\"tag\")\n  const [tag, setTag] = useState(queryTag || \"\")\n  const tagPattern = new RegExp(tag, \"i\")\n\n  const results = data.allMarkdownRemark.nodes.filter(node => {\n    const nodeTags = node.frontmatter.tags || []\n    if (tag && nodeTags.every(nodeTag => !tagPattern.test(nodeTag))) {\n      return false\n    }\n\n    return true\n  })\n\n  return (\n    <div>\n      <section className={styles.searchArea}>\n        <label>\n          <h2 className={styles.searchAreaLabelTag}>タグ</h2>\n          <div className={styles.searchAreaInput}>\n            <input\n              type=\"text\"\n              value={tag}\n              onChange={event => {\n                setTag(event.target.value)\n              }}\n            />\n            <img\n              className={styles.searchButton}\n              src={data.file.publicURL}\n              alt=\"search\"\n            />\n          </div>\n        </label>\n      </section>\n      <ul\n        className={styles.searchResultList}\n        style={{ listStyle: `none`, padding: 0 }}\n      >\n        {results.map(result => {\n          const title = result.frontmatter.title || result.fields.slug\n          const imgSrc = result.frontmatter.header?.childImageSharp?.fluid\n          const thumbnail = imgSrc ? (\n            <ThumbnailRaster img={imgSrc} />\n          ) : (\n            <ThumbnailVectorArchive img={\"/favicon.svg\"} />\n          )\n          const tags = result.frontmatter.tags\n            ? result.frontmatter.tags.map(tag => {\n                return <li key={tag}>{tag}</li>\n              })\n            : null\n\n          return (\n            <li key={result.fields.slug}>\n              <article\n                className={styles.searchResultItem}\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <Link to={result.fields.slug} itemProp=\"url\">\n                  <div className={styles.searchResultImageWrapper}>\n                    {thumbnail}\n                  </div>\n                  <section>\n                    <h2\n                      className={styles.searchResultItemTitle}\n                      itemProp=\"headline\"\n                    >\n                      {title}\n                    </h2>\n                    <time dateTime={result.frontmatter.date}>\n                      {result.frontmatter.date.replace(/-/g, \".\")}\n                    </time>\n                    <ul className={styles.searchResultTagList}>{tags}</ul>\n                  </section>\n                </Link>\n              </article>\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n  )\n}\n\nexport default Search\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport LayoutCommon from \"../components/layout-common\"\nimport SEO from \"../components/seo\"\nimport Search from \"../components/search\"\nimport styles from \"styles/pages/archive.module.css\"\n\nconst Archive = ({ data, location }) => {\n  const query = new URLSearchParams(location.search)\n  return (\n    <LayoutCommon\n      titleSvg={data.file.publicURL}\n      mainClassName=\"global-main-archive\"\n    >\n      <SEO title=\"archive\" location={location} url=\"/archive\" />\n      <section className={styles.archivePage}>\n        <Search query={query} />\n      </section>\n    </LayoutCommon>\n  )\n}\n\nexport default Archive\n\nexport const pageQuery = graphql`\n  query {\n    file(\n      sourceInstanceName: { eq: \"assets\" }\n      relativePath: { eq: \"archive.svg\" }\n    ) {\n      publicURL\n    }\n  }\n`\n"],"sourceRoot":""}