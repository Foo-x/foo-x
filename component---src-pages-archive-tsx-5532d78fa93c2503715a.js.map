{"version":3,"file":"component---src-pages-archive-tsx-5532d78fa93c2503715a.js","mappings":"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","sources":["webpack://foo-x/./src/styles/components/LayoutCommon.module.css","webpack://foo-x/./src/components/HeaderCommon.tsx","webpack://foo-x/./src/styles/components/HeaderCommon.module.css","webpack://foo-x/./src/components/LayoutCommon.tsx","webpack://foo-x/./src/styles/pages/archive.module.css","webpack://foo-x/./src/components/ThumbnailRaster.tsx","webpack://foo-x/./src/styles/components/ThumbnailRaster.module.css","webpack://foo-x/./src/components/ThumbnailVectorArchive.tsx","webpack://foo-x/./src/styles/components/ThumbnailVectorArchive.module.css","webpack://foo-x/./src/components/Search.tsx","webpack://foo-x/./src/styles/components/Search.module.css","webpack://foo-x/./src/pages/archive.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var globalHeaderCommon = \"LayoutCommon-module--globalHeaderCommon--02ac3\";","import * as styles from \"~/styles/components/HeaderCommon.module.css\"\n\nexport type Props = {\n  titleSvg: string\n}\n\nconst HeaderCommon = ({ titleSvg }: Props) => {\n  return (\n    <img className={styles.headingCommon} src={titleSvg} alt=\"heading title\" />\n  )\n}\n\nexport default HeaderCommon\n","// extracted by mini-css-extract-plugin\nexport var headingCommon = \"HeaderCommon-module--headingCommon--70f3e\";","import { PropsWithChildren } from \"react\"\nimport * as styles from \"~/styles/components/LayoutCommon.module.css\"\nimport HeaderCommon from \"./HeaderCommon\"\nimport Nav from \"./Nav\"\n\nexport type Props = PropsWithChildren<{\n  titleSvg: string\n  mainClassName?: string\n}>\n\nconst LayoutCommon = ({ children, titleSvg, mainClassName }: Props) => {\n  return (\n    <div className=\"global-wrapper\">\n      <header className={styles.globalHeaderCommon}>\n        <HeaderCommon titleSvg={titleSvg} />\n      </header>\n      <Nav isHidden={false} className=\"global-nav-wrapper\" />\n      <main className={mainClassName}>{children}</main>\n    </div>\n  )\n}\n\nexport default LayoutCommon\n","// extracted by mini-css-extract-plugin\nexport var archivePage = \"archive-module--archivePage--da7fe\";","import { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\nimport * as styles from \"~/styles/components/ThumbnailRaster.module.css\"\n\nexport type Props = {\n  img: IGatsbyImageData\n}\n\nconst ThumbnailRaster = ({ img }: Props) => {\n  return (\n    <GatsbyImage\n      image={{ ...img }}\n      className={styles.thumbnailRaster}\n      alt=\"thumbnail\"\n      itemProp=\"image\"\n    />\n  )\n}\n\nexport default ThumbnailRaster\n","// extracted by mini-css-extract-plugin\nexport var thumbnailRaster = \"ThumbnailRaster-module--thumbnailRaster--13503\";","import { useState } from \"react\"\nimport * as styles from \"~/styles/components/ThumbnailVectorArchive.module.css\"\n\nexport type Props = {\n  img: string\n}\n\nconst ThumbnailVectorArchive = ({ img }: Props) => {\n  const [isHidden, setIsHidden] = useState(true)\n\n  const className = styles.thumbnailVectorArchive\n  const classNames = isHidden ? [className, \"is-hidden\"] : [className]\n\n  return (\n    <div className={styles.thumbnailVectorArchiveSpace}>\n      <img\n        src={img}\n        className={classNames.join(\" \")}\n        alt=\"thumbnail\"\n        itemProp=\"image\"\n        onLoad={() => setIsHidden(false)}\n      />\n    </div>\n  )\n}\n\nexport default ThumbnailVectorArchive\n","// extracted by mini-css-extract-plugin\nexport var thumbnailVectorArchive = \"ThumbnailVectorArchive-module--thumbnailVectorArchive--8a1f5\";\nexport var thumbnailVectorArchiveSpace = \"ThumbnailVectorArchive-module--thumbnailVectorArchiveSpace--8afa2\";","import { graphql, Link, useStaticQuery } from \"gatsby\"\nimport { useState } from \"react\"\nimport * as styles from \"~/styles/components/Search.module.css\"\nimport ThumbnailRaster from \"./ThumbnailRaster\"\nimport ThumbnailVectorArchive from \"./ThumbnailVectorArchive\"\n\nexport type Props = {\n  query: URLSearchParams\n}\n\nconst Search = ({ query }: Props) => {\n  const data = useStaticQuery<Queries.SearchQuery>(\n    graphql`\n      query Search {\n        allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n          nodes {\n            fields {\n              slug\n            }\n            frontmatter {\n              date(formatString: \"YYYY-MM-DD\")\n              title\n              header {\n                childImageSharp {\n                  gatsbyImageData(\n                    aspectRatio: 1\n                    formats: [WEBP]\n                    placeholder: NONE\n                    layout: CONSTRAINED\n                  )\n                }\n              }\n              tags\n            }\n          }\n        }\n        file(\n          sourceInstanceName: { eq: \"assets\" }\n          relativePath: { eq: \"search.svg\" }\n        ) {\n          publicURL\n        }\n      }\n    `\n  )\n\n  const queryTag = query.get(\"tag\")\n  const [tag, setTag] = useState(queryTag || \"\")\n  const tagPattern = new RegExp(tag, \"i\")\n\n  const results = data.allMarkdownRemark.nodes.filter(node => {\n    const nodeTags =\n      node.frontmatter?.tags?.filter((tag): tag is string => tag != null) ?? []\n    if (tag && nodeTags.every(nodeTag => !tagPattern.test(nodeTag))) {\n      return false\n    }\n\n    return true\n  })\n\n  return (\n    <div>\n      <section className={styles.searchArea}>\n        <label>\n          <h2 className={styles.searchAreaLabelTag}>タグ</h2>\n          <div className={styles.searchAreaInput}>\n            <input\n              type=\"text\"\n              value={tag}\n              onChange={event => {\n                setTag(event.target.value)\n              }}\n            />\n            <img\n              className={styles.searchButton}\n              src={data.file?.publicURL ?? undefined}\n              alt=\"search\"\n            />\n          </div>\n        </label>\n      </section>\n      <ul\n        className={styles.searchResultList}\n        style={{ listStyle: `none`, padding: 0 }}\n      >\n        {results.map(result => {\n          const title = result.frontmatter?.title || result.fields?.slug\n          const imgSrc =\n            result.frontmatter?.header?.childImageSharp?.gatsbyImageData\n          const thumbnail = imgSrc ? (\n            <ThumbnailRaster img={imgSrc} />\n          ) : (\n            <ThumbnailVectorArchive img={\"/favicon.svg\"} />\n          )\n          const tags = result.frontmatter?.tags\n            ? result.frontmatter?.tags.map(tag => {\n                return <li key={tag}>{tag}</li>\n              })\n            : null\n\n          return (\n            <li key={result.fields?.slug}>\n              <article\n                className={styles.searchResultItem}\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <Link to={result.fields?.slug!} itemProp=\"url\">\n                  <div className={styles.searchResultImageWrapper}>\n                    {thumbnail}\n                  </div>\n                  <section>\n                    <h2\n                      className={styles.searchResultItemTitle}\n                      itemProp=\"headline\"\n                    >\n                      {title}\n                    </h2>\n                    <time dateTime={result.frontmatter?.date ?? undefined}>\n                      {result.frontmatter?.date?.replace(/-/g, \".\")}\n                    </time>\n                    <ul className={styles.searchResultTagList}>{tags}</ul>\n                  </section>\n                </Link>\n              </article>\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n  )\n}\n\nexport default Search\n","// extracted by mini-css-extract-plugin\nexport var searchArea = \"Search-module--searchArea--fba9f\";\nexport var searchAreaInput = \"Search-module--searchAreaInput--c2aa3\";\nexport var searchAreaLabelTag = \"Search-module--searchAreaLabelTag--04f67\";\nexport var searchButton = \"Search-module--searchButton--9172b\";\nexport var searchResultImageWrapper = \"Search-module--searchResultImageWrapper--9e552\";\nexport var searchResultItem = \"Search-module--searchResultItem--581de\";\nexport var searchResultItemTitle = \"Search-module--searchResultItemTitle--85fa4\";\nexport var searchResultList = \"Search-module--searchResultList--6f9cd\";\nexport var searchResultTagList = \"Search-module--searchResultTagList--af2f7\";","import { graphql, HeadProps, PageProps } from \"gatsby\"\nimport * as styles from \"~/styles/pages/archive.module.css\"\nimport LayoutCommon from \"../components/LayoutCommon\"\nimport Search from \"../components/Search\"\nimport Seo from \"../components/Seo\"\n\nconst Archive = ({ data, location }: PageProps<Queries.ArchivePageQuery>) => {\n  const query = new URLSearchParams(location.search)\n  return (\n    <LayoutCommon\n      titleSvg={data.file?.publicURL!}\n      mainClassName=\"global-main-archive\"\n    >\n      <section className={styles.archivePage}>\n        <Search query={query} />\n      </section>\n    </LayoutCommon>\n  )\n}\n\nexport default Archive\n\nexport const pageQuery = graphql`\n  query ArchivePage {\n    file(\n      sourceInstanceName: { eq: \"assets\" }\n      relativePath: { eq: \"archive.svg\" }\n    ) {\n      publicURL\n    }\n  }\n`\n\nexport const Head = ({ location }: HeadProps) => {\n  return <Seo title=\"archive\" location={location} url=\"/archive\" />\n}\n"],"names":["_ref","titleSvg","_jsx","className","src","alt","children","mainClassName","_jsxs","HeaderCommon","Nav","isHidden","img","GatsbyImage","image","itemProp","setIsHidden","useState","classNames","join","onLoad","_data$file$publicURL","_data$file","query","data","useStaticQuery","queryTag","get","tag","setTag","tagPattern","RegExp","results","allMarkdownRemark","nodes","filter","node","_node$frontmatter$tag","_node$frontmatter","_node$frontmatter$tag2","nodeTags","frontmatter","tags","every","nodeTag","test","type","value","onChange","event","target","file","publicURL","undefined","style","listStyle","padding","map","result","_result$frontmatter","_result$fields","_result$frontmatter2","_result$frontmatter2$","_result$frontmatter2$2","_result$frontmatter3","_result$frontmatter4","_result$fields2","_result$fields3","_result$frontmatter$d","_result$frontmatter5","_result$frontmatter6","_result$frontmatter6$","title","fields","slug","imgSrc","header","childImageSharp","gatsbyImageData","thumbnail","ThumbnailRaster","ThumbnailVectorArchive","itemScope","itemType","Link","to","dateTime","date","replace","location","URLSearchParams","search","LayoutCommon","Search","Head","_ref2","Seo","url"],"sourceRoot":""}