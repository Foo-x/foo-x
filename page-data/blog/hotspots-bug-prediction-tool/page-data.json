{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/blog/hotspots-bug-prediction-tool/","result":{"data":{"markdownRemark":{"fields":{"slug":"/blog/hotspots-bug-prediction-tool/"},"id":"65f37d7e-295f-5a18-83fc-bfeae2493428","excerpt":"経緯 『ソフトウェア品質を高める開発者テスト アジャイル時代の実践的・効率的なテストのやり方』 を読んでいると、バグの発生しやすさを予測する「Hotspot」という概念が出てきました。\nもとは Googleのブログ記事 のようです。\nすでにRubyで実装された bugspots というOSS…","html":"<h2 id=\"経緯\" style=\"position:relative;\"><a href=\"#%E7%B5%8C%E7%B7%AF\" aria-label=\"経緯 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>経緯</h2>\n<p><a href=\"https://www.amazon.co.jp/dp/B08TBD3LSS\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">『ソフトウェア品質を高める開発者テスト アジャイル時代の実践的・効率的なテストのやり方』</a> を読んでいると、バグの発生しやすさを予測する「Hotspot」という概念が出てきました。\nもとは <a href=\"http://google-engtools.blogspot.com/2011/12/bug-prediction-at-google.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Googleのブログ記事</a> のようです。\nすでにRubyで実装された <a href=\"https://github.com/igrigorik/bugspots\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">bugspots</a> というOSSがありますが、ポータビリティを考慮してPythonで実装しました。</p>\n<p><a href=\"https://github.com/Foo-x/hotspots\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Foo-x/hotspots</a></p>\n<h2 id=\"概要\" style=\"position:relative;\"><a href=\"#%E6%A6%82%E8%A6%81\" aria-label=\"概要 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>概要</h2>\n<p>アルゴリズムのもとになる考え方は、「最近よくバグが修正されたファイルはまだバグがある可能性が高い」です。\n実際にそれを支持する研究結果もあるようです。</p>\n<p><a href=\"https://blogs.itmedia.co.jp/morisaki/2011/12/--google-cabc.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">バグ修正のための変更の40%が新たなバグを混入するという研究結果 - Googleのバグ予測方法との共通点：森崎修司の「どうやってはかるの？」：オルタナティブ・ブログ</a></p>\n<p>bugspotsでは、コミットメッセージに <code class=\"language-text\">fix</code> や <code class=\"language-text\">close</code> が含まれているコミットをバグ修正としてカウントしています。\nまた、コミット日が新しいものほど重みを付けています。</p>\n<p>具体的な計算式は下の記事で解説されているのでご覧ください。\n<a href=\"https://www.publickey1.jp/blog/11/post_193.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">グーグルはコードの品質向上のため「バグ予測アルゴリズム」を採用している － Publickey</a></p>\n<p>今回私が実装したツールはオリジナルと少し違いがあります。</p>\n<ul>\n<li>バグ修正だけでなくすべてのコミットをカウント\n<ul>\n<li>バグ修正かどうかによらず、すべての変更にエンバグの可能性があり、変更回数が多いほどバグが発生しやすいため</li>\n<li>オプションでコミットメッセージによるフィルタも可能</li>\n</ul>\n</li>\n<li>全ファイルのHotspot値を計算後、[0, 1] の範囲に正規化\n<ul>\n<li>正規化しないと最後のコミットから時間が経つほど値が小さくなって、ファイル間の差異がわかりにくくなるため</li>\n<li>オプションで正規化しないことも可能</li>\n</ul>\n</li>\n</ul>\n<p>また、ファイル行数も出力するようにしています。\n行数が多いほど複雑度が高くなり、バグの発生しやすさだけでなくデバッグのしにくさにもつながるためです。</p>\n<h2 id=\"使い方\" style=\"position:relative;\"><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9\" aria-label=\"使い方 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使い方</h2>\n<ol>\n<li>Python 3.7 以上がインストールされていない場合はインストールする</li>\n<li><a href=\"https://github.com/Foo-x/hotspots\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">リポジトリ</a> から <code class=\"language-text\">hotspots</code> をダウンロードし、PATHを通す</li>\n<li>Gitリポジトリで <code class=\"language-text\">hotspots</code> コマンドを実行する</li>\n</ol>\n<p>詳しい使い方は <code class=\"language-text\">hotspots -h</code> を参照してください。</p>","frontmatter":{"title":"Googleのバグ予測アルゴリズムをPythonで実装した","date":"2023-04-09","description":null,"header":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","images":{"fallback":{"src":"/static/0ffa6809632b79255accc30c2cfaec4a/c6d7e/header.jpg","srcSet":"/static/0ffa6809632b79255accc30c2cfaec4a/05435/header.jpg 750w,\n/static/0ffa6809632b79255accc30c2cfaec4a/81c74/header.jpg 1080w,\n/static/0ffa6809632b79255accc30c2cfaec4a/8d84c/header.jpg 1366w,\n/static/0ffa6809632b79255accc30c2cfaec4a/c6d7e/header.jpg 1920w","sizes":"100vw"},"sources":[{"srcSet":"/static/0ffa6809632b79255accc30c2cfaec4a/15f20/header.webp 750w,\n/static/0ffa6809632b79255accc30c2cfaec4a/9a568/header.webp 1080w,\n/static/0ffa6809632b79255accc30c2cfaec4a/ac9dc/header.webp 1366w,\n/static/0ffa6809632b79255accc30c2cfaec4a/52f80/header.webp 1920w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.6697916666666667}}},"ogp":{"publicURL":"/static/b56289a6fdb3bdfb798bf5eb451ee0db/ogp.jpg"},"tags":["Python","バグ予測"]},"tableOfContents":"<ul>\n<li><a href=\"#%E7%B5%8C%E7%B7%AF\">経緯</a></li>\n<li><a href=\"#%E6%A6%82%E8%A6%81\">概要</a></li>\n<li><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9\">使い方</a></li>\n</ul>"}},"pageContext":{"id":"65f37d7e-295f-5a18-83fc-bfeae2493428"}},"staticQueryHashes":["1025666349","2148507062","4241674040","739241604"],"slicesMap":{}}