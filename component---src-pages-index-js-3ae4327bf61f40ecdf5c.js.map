{"version":3,"sources":["webpack:///./src/styles/components/header-top.module.css","webpack:///./src/components/layout.js","webpack:///./src/styles/components/layout.module.css","webpack:///./src/components/thumbnail-vector.js","webpack:///./src/pages/index.js","webpack:///./src/styles/components/thumbnail-vector.module.css","webpack:///./src/styles/pages/index.module.css","webpack:///./src/components/header-top.js"],"names":["module","exports","Layout","location","children","header","isRootPath","pathname","mainClassName","styles","globalMainTop","navClassName","globalNavWrapperTop","target","useRef","useState","isHidden","setIsHidden","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","root","rootMargin","threshold","observe","current","disconnect","className","data-is-root-path","globalHeader","ref","ThumbnailVector","img","thumbnailVector","classNames","thumbnailVectorSpace","src","join","alt","itemProp","loading","pageQuery","BlogIndex","data","posts","allMarkdownRemark","nodes","title","url","postList","style","listStyle","padding","map","post","frontmatter","fields","slug","key","postListItem","itemScope","itemType","to","postListItemImageWrapper","thumbnail","publicURL","HeaderTop","brand","useStaticQuery","headerTop","headerBrand"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,UAAY,sCAAsC,YAAc,0C,kCCDlF,0DAiDeC,IA5CA,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAE9BC,EADQ,MACKH,EAASI,SACtBC,EAAgBF,EAAaG,IAAOC,cAAgB,cACpDC,EAAeL,EACjBG,IAAOG,oBACP,qBAEEC,EAASC,iBAAO,MAR2B,EASjBC,oBAAS,GAAlCC,EAT0C,KAShCC,EATgC,KAiCjD,OAtBAC,qBAAU,WACR,IAcMC,EAAW,IAAIC,sBAdJ,SAAAC,GACfA,EAAQC,SAAQ,SAAAC,GACVA,EAAMC,eACRP,GAAY,GAEZA,GAAY,QAIF,CACdQ,KAAM,KACNC,WAAY,gBACZC,UAAW,IAKb,OAFAR,EAASS,QAAQf,EAAOgB,SAEjB,WACLV,EAASW,gBAEV,IAED,yBAAKC,UAAU,iBAAiBC,oBAAmB1B,GACjD,4BAAQyB,UAAWtB,IAAOwB,cAAe5B,GACzC,kBAAC,IAAD,CAAKW,SAAUA,EAAUe,UAAWpB,IACpC,0BAAMuB,IAAKrB,EAAQkB,UAAWvB,GAC3BJ,M,qBC1CTJ,EAAOC,QAAU,CAAC,aAAe,qCAAqC,oBAAsB,4CAA4C,cAAgB,wC,iLC0BzIkC,EAvBS,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAAU,EACHrB,oBAAS,GAAlCC,EAD4B,KAClBC,EADkB,KAGnCC,qBAAU,WACRD,GAAY,KACX,IAEH,IAAMc,EAAYtB,IAAO4B,gBACnBC,EAAatB,EAAW,CAACe,EAAW,aAAe,CAACA,GAE1D,OACE,yBAAKA,UAAWtB,IAAO8B,sBACrB,yBACEC,IAAKJ,EACLL,UAAWO,EAAWG,KAAK,KAC3BC,IAAI,YACJC,SAAS,QACTC,QAAQ,W,qBC8BHC,GAFEC,UAxCG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAM5C,EAAe,EAAfA,SACnB6C,EAAQD,EAAKE,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQ/C,SAAUA,EAAUE,OAAQ,kBAAC,IAAD,OAClC,kBAAC,IAAD,CAAK8C,MAAM,YAAYhD,SAAUA,EAAUiD,IAAI,MAC/C,wBAAIrB,UAAWtB,IAAO4C,SAAUC,MAAO,CAAEC,UAAU,OAASC,QAAS,IAClER,EAAMS,KAAI,SAAAC,GAAS,IAAD,EACXP,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KAEpD,OACE,wBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,6BACE9B,UAAWtB,IAAOsD,aAClBC,WAAS,EACTC,SAAS,6BAET,kBAAC,OAAD,CAAMC,GAAIR,EAAKE,OAAOC,KAAMlB,SAAS,OACnC,yBAAKZ,UAAWtB,IAAO0D,0BACrB,kBAAC,EAAD,CACE/B,KACE,UAAAsB,EAAKC,YAAYS,iBAAjB,eAA4BC,YAAa,kBAI/C,iCACE,4BACE,0BAAM1B,SAAS,YAAYQ,cAe3B,e,qBClDtBnD,EAAOC,QAAU,CAAC,qBAAuB,uDAAuD,gBAAkB,oD,qBCAlHD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,aAAe,oCAAoC,yBAA2B,kD,kCCD3I,0DAuBeqE,IAlBG,WAAO,IACfC,EAAUC,yBAAe,cAAzBD,MAUR,OACE,wBAAIxC,UAAWtB,IAAOgE,WACpB,yBAAK1C,UAAWtB,IAAOiE,YAAalC,IAAK+B,EAAMF,UAAW3B,IAAI","file":"component---src-pages-index-js-3ae4327bf61f40ecdf5c.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerTop\":\"header-top-module--headerTop--2gQhK\",\"headerBrand\":\"header-top-module--headerBrand--1JIqp\"};","import React, { useEffect, useRef, useState } from \"react\"\nimport Nav from \"./nav\"\n\nimport styles from \"styles/components/layout.module.css\"\n\nconst Layout = ({ location, children, header }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  const mainClassName = isRootPath ? styles.globalMainTop : \"global-main\"\n  const navClassName = isRootPath\n    ? styles.globalNavWrapperTop\n    : \"global-nav-wrapper\"\n\n  const target = useRef(null)\n  const [isHidden, setIsHidden] = useState(true)\n\n  useEffect(() => {\n    const callback = entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          setIsHidden(false)\n        } else {\n          setIsHidden(true)\n        }\n      })\n    }\n    const options = {\n      root: null,\n      rootMargin: \"0px 0px -100%\",\n      threshold: 0,\n    }\n    const observer = new IntersectionObserver(callback, options)\n    observer.observe(target.current)\n\n    return () => {\n      observer.disconnect()\n    }\n  }, [])\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className={styles.globalHeader}>{header}</header>\n      <Nav isHidden={isHidden} className={navClassName} />\n      <main ref={target} className={mainClassName}>\n        {children}\n      </main>\n    </div>\n  )\n}\n\nexport default Layout\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"globalHeader\":\"layout-module--globalHeader--2q2yQ\",\"globalNavWrapperTop\":\"layout-module--globalNavWrapperTop--W28bP\",\"globalMainTop\":\"layout-module--globalMainTop--3-sH6\"};","import React, { useEffect, useState } from \"react\"\n\nimport styles from \"styles/components/thumbnail-vector.module.css\"\n\nconst ThumbnailVector = ({ img }) => {\n  const [isHidden, setIsHidden] = useState(true)\n\n  useEffect(() => {\n    setIsHidden(false)\n  }, [])\n\n  const className = styles.thumbnailVector\n  const classNames = isHidden ? [className, \"is-hidden\"] : [className]\n\n  return (\n    <div className={styles.thumbnailVectorSpace}>\n      <img\n        src={img}\n        className={classNames.join(\" \")}\n        alt=\"thumbnail\"\n        itemProp=\"image\"\n        loading=\"lazy\"\n      />\n    </div>\n  )\n}\n\nexport default ThumbnailVector\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport HeaderTop from \"../components/header-top\"\nimport ThumbnailVector from \"../components/thumbnail-vector\"\nimport styles from \"styles/pages/index.module.css\"\n\nconst BlogIndex = ({ data, location }) => {\n  const posts = data.allMarkdownRemark.nodes\n\n  return (\n    <Layout location={location} header={<HeaderTop />}>\n      <SEO title=\"All posts\" location={location} url=\"/\" />\n      <ul className={styles.postList} style={{ listStyle: `none`, padding: 0 }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className={styles.postListItem}\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <Link to={post.fields.slug} itemProp=\"url\">\n                  <div className={styles.postListItemImageWrapper}>\n                    <ThumbnailVector\n                      img={\n                        post.frontmatter.thumbnail?.publicURL || \"/favicon.svg\"\n                      }\n                    />\n                  </div>\n                  <section>\n                    <h2>\n                      <span itemProp=\"headline\">{title}</span>\n                    </h2>\n                  </section>\n                </Link>\n              </article>\n            </li>\n          )\n        })}\n      </ul>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          thumbnail {\n            publicURL\n          }\n        }\n      }\n    }\n  }\n`\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"thumbnailVectorSpace\":\"thumbnail-vector-module--thumbnailVectorSpace--11DF1\",\"thumbnailVector\":\"thumbnail-vector-module--thumbnailVector--3vXdJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postList\":\"index-module--postList--2U7eB\",\"postListItem\":\"index-module--postListItem--MvFJv\",\"postListItemImageWrapper\":\"index-module--postListItemImageWrapper--2faRE\"};","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport styles from \"styles/components/header-top.module.css\"\n\nconst HeaderTop = () => {\n  const { brand } = useStaticQuery(\n    graphql`\n      query {\n        brand: file(absolutePath: { regex: \"/brand.svg/\" }) {\n          publicURL\n        }\n      }\n    `\n  )\n\n  return (\n    <h1 className={styles.headerTop}>\n      <img className={styles.headerBrand} src={brand.publicURL} alt=\"foo-x\" />\n    </h1>\n  )\n}\n\nexport default HeaderTop\n"],"sourceRoot":""}